Considering the range [m, n], if n is higher than m binary digits, in the process of accumulating a bitwise sum, every binary digit of the digit must have appeared 0, so once the case of different digits occurs, the result must be 0. In the program, when m and n are shifted to the right, if m and n are equal to each other, it means that the left side of the cumulative bitwise sum must be equal to m and n. At this point, we can move back to the left. The time complexity is O(n) and the space complexity is O(1). It consumes 6.1Mb of memory.
